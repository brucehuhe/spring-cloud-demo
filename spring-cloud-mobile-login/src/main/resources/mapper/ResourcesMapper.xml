<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="spring_cloud_user_server.spring_cloud_user_server.mapper.ResourcesMapper">
	<resultMap id="BaseResultMap"
		type="spring_cloud_user_server.spring_cloud_user_server.bean.Resources">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="resUrl" property="resurl" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="parentId" property="parentid" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, resUrl, type, parentId, sort, create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from resources
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="findByUser" resultMap="BaseResultMap" parameterType="Map">
		SELECT re.id,re.name,re.parentId,re.resUrl,re.type
		FROM resources re
		LEFT JOIN role_resources rr
		ON re.id = rr.resourcesId
		LEFT JOIN
		user_role ur
		ON rr.roleId =ur.roleId
		WHERE 1=1
		<if test="userid != null">
			and ur.userId=#{userid,jdbcType=VARCHAR}
		</if>
		AND re.type= '1'
		GROUP BY re.id
		ORDER BY re.sort ASC
	</select>
	
	<select id="findByResources" resultMap="BaseResultMap" parameterType="Map">
		SELECT re.id,re.name,re.parentId,re.resUrl,re.type
		FROM resources re
		LEFT JOIN role_resources rr
		ON re.id = rr.resourcesId
		LEFT JOIN
		user_role ur
		ON rr.roleId =ur.roleId
		WHERE 1=1
		<if test="userid != null">
			and ur.userId=#{userid,jdbcType=VARCHAR}
		</if>
		AND re.type= '1'
		GROUP BY re.id
		ORDER BY re.sort ASC
	</select>
	
	<select id="findResourcesByAdmin" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from resources
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from resources
		where id in
		<foreach item="idItem" collection="array" open="(" separator=","
			close=")">
			#{idItem}
		</foreach>
	</delete>
	<insert id="insert"
		parameterType="spring_cloud_user_server.spring_cloud_user_server.bean.Resources">
		insert into resources (id, name, resUrl,
		type, parentId,
		sort,
		create_time)
		values (#{id,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{resurl,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR}, #{parentid,jdbcType=VARCHAR},
		#{sort,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="spring_cloud_user_server.spring_cloud_user_server.bean.Resources">
		insert into resources
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="resurl != null">
				resUrl,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="parentid != null">
				parentId,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="resurl != null">
				#{resurl,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="parentid != null">
				#{parentid,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="spring_cloud_user_server.spring_cloud_user_server.bean.Resources">
		update resources
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="resurl != null">
				resUrl = #{resurl,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="parentid != null">
				parentId = #{parentid,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="spring_cloud_user_server.spring_cloud_user_server.bean.Resources">
		update resources
		set name = #{name,jdbcType=VARCHAR},
		resUrl = #{resurl,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		parentId = #{parentid,jdbcType=VARCHAR},
		sort =
		#{sort,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>