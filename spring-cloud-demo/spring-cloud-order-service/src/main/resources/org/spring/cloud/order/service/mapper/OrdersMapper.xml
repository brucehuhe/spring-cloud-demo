<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.spring.cloud.order.service.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="org.spring.cloud.order.service.model.Orders" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="good_id" property="goodId" jdbcType="VARCHAR" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="good_number" property="goodNumber" jdbcType="BIGINT" />
    <result column="good_price" property="goodPrice" jdbcType="REAL" />
    <result column="good_mprice" property="goodMprice" jdbcType="REAL" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="logistics_id" property="logisticsId" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="attr1" property="attr1" jdbcType="VARCHAR" />
    <result column="attr2" property="attr2" jdbcType="VARCHAR" />
    <result column="attr3" property="attr3" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="store_id" property="storeId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_number, good_id, good_name, good_number, good_price, good_mprice, user_id, 
    logistics_id, state, attr1, attr2, attr3, create_time, update_time, store_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from orders
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <select id="selectByOrderNumbers" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_number like #{orderNumber,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByOrderNumber" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_number like #{orderNumber,jdbcType=VARCHAR}
  </select>
  
  <insert id="insert" parameterType="org.spring.cloud.order.service.model.Orders" >
    insert into orders (id, order_number, good_id, 
      good_name, good_number, good_price, 
      good_mprice, user_id, logistics_id, 
      state, attr1, attr2, 
      attr3, create_time, update_time, 
      store_id)
    values (#{id,jdbcType=VARCHAR}, #{orderNumber,jdbcType=VARCHAR}, #{goodId,jdbcType=VARCHAR}, 
      #{goodName,jdbcType=VARCHAR}, #{goodNumber,jdbcType=BIGINT}, #{goodPrice,jdbcType=REAL}, 
      #{goodMprice,jdbcType=REAL}, #{userId,jdbcType=VARCHAR}, #{logisticsId,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{attr1,jdbcType=VARCHAR}, #{attr2,jdbcType=VARCHAR}, 
      #{attr3,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{storeId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.spring.cloud.order.service.model.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="goodName != null" >
        good_name,
      </if>
      <if test="goodNumber != null" >
        good_number,
      </if>
      <if test="goodPrice != null" >
        good_price,
      </if>
      <if test="goodMprice != null" >
        good_mprice,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="logisticsId != null" >
        logistics_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="attr1 != null" >
        attr1,
      </if>
      <if test="attr2 != null" >
        attr2,
      </if>
      <if test="attr3 != null" >
        attr3,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodNumber != null" >
        #{goodNumber,jdbcType=BIGINT},
      </if>
      <if test="goodPrice != null" >
        #{goodPrice,jdbcType=REAL},
      </if>
      <if test="goodMprice != null" >
        #{goodMprice,jdbcType=REAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="logisticsId != null" >
        #{logisticsId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="attr1 != null" >
        #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        #{attr3,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.spring.cloud.order.service.model.Orders" >
    update orders
    <set >
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodNumber != null" >
        good_number = #{goodNumber,jdbcType=BIGINT},
      </if>
      <if test="goodPrice != null" >
        good_price = #{goodPrice,jdbcType=REAL},
      </if>
      <if test="goodMprice != null" >
        good_mprice = #{goodMprice,jdbcType=REAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="logisticsId != null" >
        logistics_id = #{logisticsId,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="attr1 != null" >
        attr1 = #{attr1,jdbcType=VARCHAR},
      </if>
      <if test="attr2 != null" >
        attr2 = #{attr2,jdbcType=VARCHAR},
      </if>
      <if test="attr3 != null" >
        attr3 = #{attr3,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.spring.cloud.order.service.model.Orders" >
    update orders
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      good_id = #{goodId,jdbcType=VARCHAR},
      good_name = #{goodName,jdbcType=VARCHAR},
      good_number = #{goodNumber,jdbcType=BIGINT},
      good_price = #{goodPrice,jdbcType=REAL},
      good_mprice = #{goodMprice,jdbcType=REAL},
      user_id = #{userId,jdbcType=VARCHAR},
      logistics_id = #{logisticsId,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      attr1 = #{attr1,jdbcType=VARCHAR},
      attr2 = #{attr2,jdbcType=VARCHAR},
      attr3 = #{attr3,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      store_id = #{storeId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>